/**
 * ID - Description
 *
 * @fileoverview The main experiment logic goes here. Everything should be written inside the
 * activate function which is called if the conditions in triggers.js have passed evaluation
 * @author User Conversion
 */
import { addPoller, addEventListener, addObserver } from './winstack';
import { setup, fireEvent } from '../../../../../core-files/services';
import shared from '../../../../../core-files/shared';
import { getCookie, logMessage, observePageChange, setCookie } from '../../../../../lib/utils';
import { isArguments } from 'lodash';

const { ID, VARIATION } = shared;
let questionElement;

const fireAndLogEvent = (event) => {
  logMessage(event);
  fireEvent(event, true);
}

const completeAndClose = (message, showSize) => {

  fireAndLogEvent(message);
  setCookie(`${ID}-question-dismissed`, true);
  questionElement.classList.add('complete');

  if(showSize == true) {
    questionElement.classList.add('sizing-help');
  }

  if(window.location.href.indexOf('confirm') > -1) {

    let skuDetail = "";
    let bagMain = document.querySelector('.c-bag__main');
    let allLinesPurchased = bagMain.querySelectorAll('.c-bag__item');

    [].slice.call(allLinesPurchased).forEach((line) => {
      let skuCode = line.querySelector('.c-sku__code').innerText;
      skuDetail += `${skuCode}; `;
    });

    fireAndLogEvent("Interaction - skus purchased with message: ["+message+"] are: ["+skuDetail+"]");

  }

  setTimeout(() => {
    questionElement.remove();
  }, 5000);
}

const startExperiment = () => {

  let questionHTML = `

    <div class="${ID}-question-element">
    
      <div class="${ID}-question-element--header">

        <button id="${ID}-hide-element" class="${ID}-question-element--hide"><svg width="10" height="10" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M9.47838 0.521642C9.21802 0.261292 8.79591 0.261308 8.53557 0.521642L5.00002 4.05719L1.46449 0.521652C1.20415 0.261302 0.782039 0.261302 0.52168 0.521652C0.261322 0.782019 0.261333 1.20412 0.521682 1.46447L4.05721 5L0.521692 8.53552C0.261347 8.79587 0.261334 9.21797 0.521692 9.47833C0.782049 9.73868 1.20416 9.73867 1.4645 9.47833L5.00002 5.9428L8.53556 9.47833C8.7959 9.73868 9.21801 9.7387 9.47837 9.47833C9.73873 9.21798 9.73871 8.79588 9.47837 8.53553L5.94283 5L9.47838 1.46445C9.73872 1.2041 9.73874 0.782009 9.47838 0.521642Z" fill="white"/></svg></button>

        <svg width="30" height="28" viewBox="0 0 30 28" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.27627 24.2094C1.36146 24.8461 1.40379 25.4878 1.40298 26.1302C1.4024 26.1723 1.41041 26.214 1.42654 26.2529C1.44266 26.2917 1.46654 26.3269 1.49673 26.3561C1.52692 26.3854 1.56278 26.4082 1.6021 26.4232C1.64141 26.4381 1.68337 26.4449 1.72539 26.443C1.74304 26.442 3.44757 26.3724 4.90257 26.7551C5.64695 26.9469 6.41119 27.0511 7.17975 27.0656C9.12436 27.111 11.8176 26.8265 13.6004 25.2134C13.8547 24.976 14.1562 24.795 14.4852 24.6819C14.8179 24.5598 15.1832 24.5598 15.5159 24.6819C15.8448 24.795 16.1463 24.9761 16.4006 25.2135C18.0714 26.7252 20.5413 27.07 22.4461 27.07C22.5737 27.07 22.699 27.0685 22.8211 27.0656C23.5897 27.0511 24.354 26.9469 25.0984 26.7551C26.5534 26.3724 28.2584 26.442 28.2756 26.443C28.3175 26.4444 28.3594 26.4375 28.3986 26.4225C28.4379 26.4076 28.4738 26.385 28.5042 26.356C28.5344 26.3267 28.5583 26.2916 28.5744 26.2528C28.5905 26.214 28.5985 26.1723 28.598 26.1302C28.597 25.4879 28.6392 24.8461 28.7242 24.2094C28.7767 23.8153 28.851 23.4244 28.947 23.0385C29.1939 21.9943 29.3543 20.9315 29.4265 19.8609C29.4303 19.7908 29.4101 19.7216 29.3692 19.6645C29.3283 19.6074 29.2693 19.566 29.2017 19.547C27.7704 19.1445 26.7963 17.779 26.7868 17.7656V17.765C25.9851 16.5022 25.4609 15.0835 25.2489 13.6028C25.2299 13.2439 24.9313 7.39849 25.4783 2.23558C25.4845 2.17757 25.4741 2.119 25.4483 2.06666C25.4226 2.01432 25.3825 1.97034 25.3328 1.93981L23.7622 0.976017C23.7193 0.94967 23.6706 0.934229 23.6203 0.931039C23.57 0.92785 23.5197 0.937009 23.4738 0.957719C23.4279 0.978428 23.3877 1.01006 23.3568 1.04985C23.3259 1.08964 23.3052 1.13639 23.2965 1.18602C23.2742 1.31308 22.7955 4.15072 22.9894 11.2551C22.4042 11.3771 21.9708 11.6433 21.6992 12.0492C21.5784 12.2322 21.4931 12.4363 21.4476 12.6509C21.2505 12.4843 21.0136 12.3716 20.76 12.3237C20.5065 12.2757 20.2448 12.2942 20.0005 12.3773C19.538 12.5492 19.218 12.9606 19.1224 13.5058C19.1093 13.5807 19.1014 13.6565 19.0989 13.7325C18.9287 13.6481 18.7454 13.5929 18.5568 13.5694C17.7029 13.4882 17.1151 13.8782 16.8554 14.6963C16.7815 14.9404 16.7461 15.1944 16.7507 15.4493C16.5566 15.3596 16.3439 15.3177 16.1303 15.3271C15.9167 15.3366 15.7084 15.397 15.523 15.5035C15.308 15.6333 15.1283 15.8141 15 16.03C14.8721 15.8143 14.6929 15.6334 14.4784 15.5035C14.293 15.397 14.0847 15.3366 13.8711 15.3271C13.6575 15.3177 13.4448 15.3596 13.2507 15.4493C13.2553 15.1944 13.2199 14.9404 13.146 14.6963C12.8862 13.8785 12.298 13.4882 11.4447 13.5694C11.2561 13.5929 11.0728 13.6481 10.9025 13.7325C10.9 13.6565 10.8921 13.5807 10.879 13.5058C10.7835 12.9606 10.4634 12.5492 10.0009 12.3773C9.75659 12.2942 9.49493 12.2757 9.24135 12.3236C8.98778 12.3715 8.75092 12.4843 8.55383 12.6509C8.50825 12.4363 8.42287 12.2323 8.3021 12.0492C8.03051 11.6433 7.5971 11.3768 7.01192 11.2551C7.20604 4.15081 6.7271 1.31308 6.70477 1.18602C6.69609 1.13639 6.6754 1.08964 6.6445 1.04985C6.61361 1.01006 6.57345 0.978428 6.52752 0.957719C6.48159 0.937009 6.4313 0.92785 6.38102 0.931039C6.33074 0.934229 6.28201 0.94967 6.23907 0.976017L4.66848 1.93981C4.61877 1.97034 4.57872 2.01432 4.55297 2.06666C4.52722 2.119 4.51682 2.17757 4.52298 2.23558C5.07004 7.39849 4.77154 13.2439 4.75239 13.6028C4.54045 15.0833 4.01632 16.502 3.21472 17.7647L3.21427 17.7653C3.20457 17.779 2.23045 19.1445 0.799186 19.547C0.731612 19.566 0.672524 19.6074 0.631657 19.6645C0.590789 19.7216 0.570581 19.7908 0.574362 19.8609C0.646595 20.9315 0.806992 21.9943 1.05392 23.0385C1.14971 23.4244 1.22394 23.8153 1.27627 24.2094ZM23.842 1.74984L24.843 2.36405C24.4274 6.45358 24.5253 10.9122 24.5934 12.7678C24.3826 12.7797 24.0623 12.8061 23.6597 12.8637C23.4089 6.34399 23.7052 2.90934 23.842 1.74984ZM22.214 12.3889C22.3766 12.148 22.6434 11.98 23.007 11.8854C23.0182 12.2361 23.031 12.5965 23.0454 12.9667C22.7299 13.0272 22.3837 13.1053 22.0147 13.206C21.993 12.9194 22.0627 12.6333 22.214 12.3889ZM19.7295 13.6125C19.787 13.2841 19.9589 13.051 20.2147 12.9562C20.3597 12.9101 20.5142 12.9023 20.6631 12.9338C20.812 12.9652 20.9502 13.0346 21.0642 13.1354C21.1669 13.2131 21.2566 13.3066 21.33 13.4124C21.2499 13.4389 21.1694 13.4659 21.0878 13.4945C20.6304 13.6548 20.1825 13.8409 19.7461 14.0519C19.7107 13.9081 19.705 13.7585 19.7295 13.6125ZM17.4427 14.883C17.6154 14.3395 17.9303 14.1304 18.4973 14.184C18.6979 14.2158 18.888 14.2951 19.0516 14.4154C18.4594 14.7488 17.897 15.1326 17.3707 15.5625C17.3542 15.3336 17.3786 15.1036 17.4427 14.8833V14.883ZM15.8341 16.036C16.0657 15.9003 16.3452 15.9166 16.6425 16.083C16.6704 16.0987 16.6971 16.1164 16.7224 16.1359C16.2 16.6343 15.7266 17.1818 15.3089 17.7707V17.1972C15.3089 16.6792 15.5151 16.2235 15.8341 16.0363V16.036ZM14.1659 16.036C14.485 16.2232 14.6912 16.6789 14.6912 17.1972V17.7707C14.274 17.1824 13.8012 16.6354 13.2795 16.1374C13.3039 16.117 13.3301 16.0988 13.3578 16.083C13.6552 15.9168 13.9348 15.9007 14.1659 16.0363V16.036ZM11.5028 14.184C12.0698 14.1296 12.3847 14.3395 12.5573 14.883C12.6217 15.1036 12.6463 15.3339 12.63 15.5632C12.1034 15.133 11.5409 14.749 10.9485 14.4154C11.1121 14.2952 11.3022 14.216 11.5028 14.1843V14.184ZM8.93624 13.1353C9.05025 13.0345 9.18843 12.9651 9.33729 12.9337C9.48615 12.9023 9.64061 12.91 9.7856 12.9561C10.0409 13.0509 10.2131 13.284 10.2709 13.6124C10.2955 13.7584 10.2899 13.908 10.2546 14.0518C9.81818 13.8408 9.3702 13.6547 8.91277 13.4944C8.83125 13.4658 8.75069 13.4387 8.67066 13.4123C8.74398 13.3065 8.83363 13.213 8.93624 13.1353ZM7.7861 12.3888C7.93736 12.6332 8.00712 12.9193 7.98533 13.2059C7.61633 13.1052 7.27019 13.0271 6.95466 12.9666C6.96913 12.596 6.98192 12.2356 6.99304 11.8853C7.35666 11.98 7.62357 12.1479 7.7861 12.3889V12.3888ZM6.15833 1.74966C6.29545 2.90687 6.59192 6.33384 6.34036 12.8637C5.93775 12.8061 5.61745 12.7797 5.40666 12.7678C5.47486 10.9122 5.57271 6.45358 5.15713 2.36405L6.15833 1.74966ZM3.08095 18.8505C3.08024 18.8707 3.07892 18.8911 3.07839 18.9111C3.04452 20.1494 3.40036 21.3671 4.09572 22.3923C4.79107 23.4175 5.79082 24.1985 6.95386 24.625C6.99209 24.6399 7.03291 24.6471 7.07393 24.646C7.11495 24.645 7.15536 24.6358 7.19278 24.619C7.23021 24.6021 7.2639 24.578 7.2919 24.548C7.31989 24.518 7.34163 24.4827 7.35584 24.4442C7.37004 24.4057 7.37643 24.3648 7.37464 24.3238C7.37284 24.2828 7.36289 24.2426 7.34537 24.2055C7.32785 24.1684 7.30311 24.1351 7.2726 24.1077C7.24209 24.0802 7.20641 24.0592 7.16766 24.0457C6.12595 23.6638 5.23044 22.9645 4.60751 22.0464C3.98459 21.1283 3.66571 20.0378 3.69586 18.9287C3.7038 18.6464 3.72657 18.3531 3.76363 18.0552C4.65431 16.6425 5.21473 15.047 5.40313 13.3875C6.53808 13.4705 7.65684 13.7049 8.7296 14.0846C10.5272 14.7183 13.0106 16.0653 14.6829 18.8895C14.6372 19.275 14.3942 20.8148 13.3529 22.1777C12.5504 20.7247 10.6873 19.6976 9.57877 19.1901C8.85583 18.8692 8.24527 18.3397 7.82545 17.6693C7.30089 16.8128 7.00416 15.7518 6.9431 14.5156C6.93907 14.4338 6.90271 14.357 6.84202 14.302C6.78132 14.247 6.70126 14.2183 6.61945 14.2223C6.53764 14.2264 6.46078 14.2627 6.40577 14.3234C6.35077 14.3841 6.32213 14.4642 6.32616 14.546C6.39207 15.8867 6.71916 17.0461 7.29833 17.9919C7.7822 18.767 8.48667 19.3798 9.3213 19.7517C10.202 20.1548 12.261 21.2272 12.9164 22.686C12.3132 23.3091 11.5719 23.7815 10.7524 24.065C10.1302 24.2858 9.47221 24.3887 8.81227 24.3683H8.80195C8.72005 24.3669 8.64097 24.3982 8.58212 24.4552C8.52327 24.5122 8.48946 24.5902 8.48814 24.6721C8.48682 24.754 8.51809 24.8331 8.57507 24.8919C8.63205 24.9508 8.71008 24.9846 8.79198 24.9859C8.85586 24.988 8.91972 24.9891 8.98354 24.9891C9.6562 24.9882 10.3238 24.8728 10.9577 24.6478C11.921 24.3123 12.7864 23.7439 13.477 22.9931C13.498 22.9756 13.5166 22.9554 13.5323 22.933C13.9912 22.4181 14.369 21.8364 14.6529 21.2078C14.787 20.9138 14.9029 20.6118 15 20.3036C15.0972 20.6117 15.213 20.9136 15.3471 21.2076C15.631 21.8361 16.0088 22.4178 16.4677 22.9328C16.4833 22.9552 16.5019 22.9754 16.523 22.9928C17.2135 23.7436 18.079 24.312 19.0423 24.6475C19.6755 24.8726 20.3424 24.988 21.0144 24.9889C21.1646 24.9889 21.315 24.983 21.4657 24.9713C21.5064 24.9684 21.5461 24.9576 21.5826 24.9394C21.619 24.9211 21.6515 24.8959 21.6781 24.865C21.7048 24.8341 21.725 24.7983 21.7378 24.7596C21.7505 24.7209 21.7554 24.68 21.7523 24.6394C21.7492 24.5988 21.738 24.5591 21.7195 24.5228C21.701 24.4865 21.6754 24.4542 21.6444 24.4278C21.6133 24.4014 21.5773 24.3815 21.5385 24.369C21.4997 24.3566 21.4588 24.352 21.4182 24.3555C20.6823 24.4115 19.9428 24.3126 19.2476 24.0649C18.4279 23.7833 17.6856 23.3136 17.0802 22.6935C17.7317 21.2308 19.7964 20.1555 20.6787 19.7516C21.5133 19.3798 22.2178 18.767 22.7016 17.9918C23.2808 17.046 23.6079 15.8866 23.6738 14.5459C23.6779 14.4641 23.6492 14.384 23.5942 14.3233C23.5392 14.2626 23.4624 14.2263 23.3805 14.2223C23.2987 14.2182 23.2187 14.2469 23.158 14.3019C23.0973 14.3569 23.0609 14.4337 23.0569 14.5155C22.9962 15.7517 22.6995 16.8128 22.1745 17.6693C21.7548 18.3396 21.1442 18.8692 20.4213 19.19C19.3111 19.6983 17.4438 20.7276 16.6432 22.1842C16.3574 21.8076 16.1141 21.4006 15.9177 20.9706C15.6143 20.311 15.4121 19.6095 15.3177 18.8897C16.99 16.0657 19.4736 14.7186 21.271 14.0849C22.3438 13.7052 23.4625 13.4707 24.5975 13.3878C24.7859 15.0472 25.3463 16.6427 26.237 18.0555C26.274 18.3533 26.2968 18.6466 26.3047 18.929C26.3403 20.0125 26.0398 21.0804 25.4445 21.9864C24.8492 22.8924 23.9881 23.592 22.9795 23.9893C22.9415 24.0042 22.9068 24.0264 22.8774 24.0548C22.8481 24.0831 22.8246 24.117 22.8085 24.1545C22.7923 24.192 22.7837 24.2323 22.7832 24.2732C22.7827 24.314 22.7903 24.3545 22.8056 24.3924C22.8208 24.4302 22.8435 24.4647 22.8721 24.4937C22.9008 24.5228 22.9349 24.5459 22.9726 24.5617C23.0102 24.5775 23.0506 24.5856 23.0915 24.5857C23.1323 24.5858 23.1727 24.5778 23.2104 24.5621C24.3365 24.1183 25.2977 23.3369 25.9623 22.3253C26.6268 21.3136 26.9621 20.1211 26.9222 18.9113C26.9217 18.8914 26.9204 18.8709 26.9197 18.8508C27.3562 19.2775 27.9983 19.785 28.7927 20.0652C28.714 21.0175 28.5649 21.9628 28.3468 22.8931C28.2455 23.3013 28.167 23.7147 28.1117 24.1315C28.0384 24.6915 27.9948 25.2549 27.9812 25.8195C27.3976 25.8156 26.1131 25.8499 24.9413 26.158C24.2436 26.3376 23.5272 26.4351 22.8068 26.4484C20.9758 26.4916 18.447 26.2323 16.8151 24.7558C16.4968 24.4603 16.1197 24.2352 15.7085 24.0953C15.2507 23.9322 14.7506 23.9322 14.2927 24.0953C13.8815 24.2352 13.5044 24.4602 13.186 24.7557C11.5542 26.2324 9.02792 26.491 7.19422 26.4484C6.47386 26.4351 5.75753 26.3376 5.0598 26.158C3.88795 25.8498 2.60307 25.8139 2.01992 25.8195C2.00634 25.2549 1.96277 24.6915 1.88942 24.1315C1.83409 23.7147 1.75562 23.3013 1.65436 22.8931C1.43621 21.9628 1.28715 21.0175 1.20842 20.0652C2.00227 19.7847 2.64445 19.2773 3.08095 18.8505Z" fill="white"/></svg>
        
        <h2 class="${ID}-question-element--headingtext">Just a quick question</h2>

      </div>

      <div class="${ID}-question-element--sizequestion">
      
        <div class="${ID}-question-element--query">
          <h3> Do you know your bra size? </h3>
        
          <div class="${ID}-question">
            <input type="radio" id="${ID}-know-my-size" name="${ID}-size-question" />
            <label for="${ID}-know-my-size"> I know my size </label>
          </div>
          <div class="${ID}-question">
            <input type="radio" id="${ID}-pretty-sure" name="${ID}-size-question" />
            <label for="${ID}-pretty-sure"> I'm pretty sure I know my size </label>
          </div>
          <div class="${ID}-question">
            <input type="radio" id="${ID}-dont-know-size" name="${ID}-size-question" />
            <label for="${ID}-dont-know-size"> I don't know my size </label>
          </div>
        </div>
      
        <div class="${ID}-question-element--thankyou">
        
          <h2> Thank You! </h2>

          <div class="${ID}-question-element--sizinghelp">

            <h3> We can help! Go to our sizing guides. </h3>

            <a id="${ID}-sizing-guide-link" href="https://www.bravissimo.com/bra-fitting-guide/"> Bra Fitting Guide </a>
          
          </div>
        
        </div>


      </div>
    
    </div>
  
  
  
  
  `;

  let insertionPoint = document.body;
  insertionPoint.insertAdjacentHTML('beforeend', questionHTML);
  questionElement = document.querySelector(`.${ID}-question-element`);
  setTimeout(() => {
    questionElement.classList.add('visible');
  }, 3000);
  let hideElement = document.getElementById(`${ID}-hide-element`)

  addEventListener(hideElement, 'click', (e) => {
    let message = 'Click - user has clicked on the close X';
    questionElement.remove();
    completeAndClose(message, false);
  });

  let knowSizeElement = document.getElementById(`${ID}-know-my-size`)
  addEventListener(knowSizeElement, 'click', (e) => {
    let message = 'Click - user has selected "I know my size"';
    completeAndClose(message, false);
  });

  let ideaSizeElement = document.getElementById(`${ID}-pretty-sure`)
  addEventListener(ideaSizeElement, 'click', (e) => {
    let message = 'Click - user has selected "Im pretty sure I know my size"';
    completeAndClose(message, true);
  });

  let needFittingElement = document.getElementById(`${ID}-dont-know-size`)
  addEventListener(needFittingElement, 'click', (e) => {
    let message = 'Click - user has selected "I dont know my size"';
    completeAndClose(message, true);
  });

  let sizingHelpGuide = document.getElementById(`${ID}-sizing-guide-link`);
  addEventListener(sizingHelpGuide, 'click', (e) => {
    fireAndLogEvent('Click - user has clicked on sizing guide link in thank you element');
  });
}

export default () => {


  setup();

  logMessage(ID + " Variation: "+VARIATION);

  fireEvent('Conditions Met');

  // -----------------------------
  // Add events that apply to both variant and control
  // -----------------------------
  // ...

  // -----------------------------
  // If control, bail out from here
  // -----------------------------
  if(shared.VARIATION == 'control') {
    return;
  }

  // Write experiment code here
  // ...

  if(window.location.href.indexOf('confirm') > -1 && !getCookie(`${ID}-question-dismissed`)) {
    startExperiment();
    fireAndLogEvent("Visible - experiment shown on confirmation page");
    
  } else if(!getCookie(`${ID}-question-dismissed`) && localStorage.getItem(`${ID}-page-viewed-count`) < 4) {
    startExperiment();
    fireAndLogEvent("Visible - experiment shown on regular website");
    if(!localStorage.getItem(`${ID}-page-viewed-count`)) {
      localStorage.setItem(`${ID}-page-viewed-count`, 1);
    } else {
      let currCount = localStorage.getItem(`${ID}-page-viewed-count`);
      currCount ++;
      localStorage.setItem(`${ID}-page-viewed-count`, currCount);

      if(currCount == 4) {
        document.querySelector(`.${ID}-question-element`).remove();
        
      } 

    }
  
    observePageChange(document.body, (p) => {

      let currCount = localStorage.getItem(`${ID}-page-viewed-count`);
      currCount ++;
      localStorage.setItem(`${ID}-page-viewed-count`, currCount);

      if(currCount == 4) {
        document.querySelector(`.${ID}-question-element`).remove();
        setCookie(`${ID}-question-dismissed`, true);
      } 
      
      

      
  
    });

    // add experiment observer to re-add body classes when megamenu opened
    var body = document.body;
    if(body) {
      addObserver(body, function () {
        
        if(!document.documentElement.classList.contains(ID)) {
          document.documentElement.classList.add(ID);
        }

        
  
      }, {
        config: {
          attributes: true,
          childList: true,
          subtree: false,
        }
      });
    } 
  } 

  
};
